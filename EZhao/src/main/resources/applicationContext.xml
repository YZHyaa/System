<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 开启注解 （可以向IOC中注入）-->
	<context:annotation-config/>
    <!-- 扫描注解（除了controller外）,将 controller 交给 SpringMVC 容器去管理 -->
	<context:component-scan base-package="com.ezhao">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>	
	
	
	<!-- 与mybatis整合 -->
	<!--  
		druid连接池
	<context:property-placeholder location="classpath:dbconfig-druid.properties" ignore-unresolvable="true" />
	<bean id="pooledDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <property name="url" value="${url}" />  
         <property name="username" value="${username}" />  
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" />
         
          基本配置：
         <property name="filters" value="${filters}" />  
         <property name="maxActive" value="${maxActive}" />
         <property name="initialSize" value="${initialSize}" />
         <property name="maxWait" value="${maxWait}" />
         <property name="minIdle" value="${minIdle}" />  
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>  
	-->
		
	<!-- 连接池 -->
	<context:property-placeholder location="classpath:dbconfig-c3p0.properties"/>
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!--  sqlSessionFactory  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- mapper文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
    <!-- 配置扫描器，将mybatis接口的实现加入Ioc(代理)-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现 -->
		<property name="basePackage" value="com.ezhao.mapper"></property>
	</bean>
	
	
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制住事务源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
    <!-- 可通过注解控制事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>
